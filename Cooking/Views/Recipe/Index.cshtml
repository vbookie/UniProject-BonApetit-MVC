@model Cooking.Models.IndexRecipeViewModel

@{
    ViewBag.Title = "Recipes";
}

@if (System.Security.Claims.ClaimsPrincipal.Current.IsInRole(Cooking.Data.RoleConst.Administrator))
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="btn-group">
                <a href="@Url.Action("Create")" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span> Add recipe</a>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-2">
        <div class="panel panel-default">
            <div class="panel-heading">@Html.DisplayNameFor(m => m.Categories)</div>
            <div class="panel-body">
                <ul class="list-unstyled">
                    <li class="item"><a href="@Url.Action("Index", new { id = 0 })">All</a></li>
                    @foreach (var category in Model.Categories)
                    {
                        <li class="item"><a href="@Url.Action("Index", new { id = 0, category = category })">@category</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-8">
        @if (Model.Recipes.Count() > 0)
        {
            for (int i = 0; i < 2; i++)
            {
                <div class="row">
                    @foreach (var recipe in Model.Recipes.Skip(i * 4).Take(4))
                    {
                        <div class="col-md-3 text-center">
                            <a href="@Url.Action("Details", new { id = recipe.Id })" title="@recipe.Name">
                                <img src="@recipe.ImageUrl" class="img-responsive img-thumbnail" />
                                <div class="text-center">@recipe.Name</div>
                            </a>
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <div class="row">
                <div class="alert alert-info text-center" role="alert">
                    @(Model.CurrentCategory == null ? "No recipes found" : string.Format("No recipes found for category {0}.", Model.CurrentCategory))
                </div>
            </div>
                    }
        <div class="row text-center">
            <div class="btn-group btn-group-sm" role="group">
                @if (Model.HasPreviousPage)
                {
                    <a href="@Url.Action("Index", new { id = Model.PageId - 1 })" class="btn btn-default"><span class="glyphicon glyphicon-arrow-left"></span> Previous</a>
                }
                @if (Model.HasNextPage)
                {
                    <a href="@Url.Action("Index", new { id = Model.PageId + 1 })" class="btn btn-default">Next <span class="glyphicon glyphicon-arrow-right"></span></a>
                }
            </div>
        </div>
    </div>
    <div class="col-md-2">
        <div class="panel panel-default">
            <div class="panel-heading">Latest recipes</div>
            <div class="panel-body">
                @foreach (var recipe in Model.LatestRecipes)
                {
                    <a href="@Url.Action("Details", new { id = recipe.Id })" title="@recipe.Name">
                        <img src="@recipe.ImageUrl" class="img-responsive img-thumbnail" />
                    </a>
                }
            </div>
        </div>
    </div>
</div>
